{"version":3,"file":"static/js/171.40159912.chunk.js","mappings":"kNACA,EAAmH,iCAAnH,EAAiK,mCAAjK,EAA6M,+BAA7M,EAAsT,oC,yDCEzSA,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAgBC,GAAW,EAApBC,MAAoB,aACjD,OACI,iBAAMC,UAAWC,EAAjB,UACI,uCAAcJ,GAAUC,OAOvBI,EAAQ,SAAC,GAA6B,IAA5BL,EAA2B,EAA3BA,MAAgBC,GAAW,EAApBC,MAAoB,aAC9C,OAAO,iBAAMC,UAAWC,EAAjB,UACC,oCAAYJ,GAAUC,OAMrBK,EAAW,SAAC,GAAa,IAAZN,EAAW,EAAXA,MACtB,OACI,iBAAKG,UAAWC,EAAhB,WACI,0BAAOD,UAAWC,EAAgBG,KAAK,YAAeP,IAD1D,KACmE,iBAAMG,UAAWC,EAAjB,2B,4GCvB3E,GAAgB,UAAY,yBAAyB,MAAQ,qBAAqB,SAAW,wBAAwB,WAAa,0BAA0B,WAAa,0BAA0B,KAAO,oBAAoB,YAAc,4B,iDCYxOI,GAAcC,EAAAA,EAAAA,GAA0B,IAqC5C,EAnCmE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAElE,OACI,kBAAMP,UAAWQ,EAAAA,KAAcC,SAAUF,EAAzC,WAEI,SAACG,EAAA,EAAD,CACIV,UAAWQ,EAAAA,MACXG,YAAY,QACZC,KAAM,QACNC,UAAWX,EAAAA,GACXY,SAAU,CAACC,EAAAA,MAEf,SAACL,EAAA,EAAD,CACIV,UAAWQ,EAAAA,SACXG,YAAY,WACZC,KAAM,WACNR,KAAM,WACNS,UAAWX,EAAAA,GACXY,SAAU,CAACC,EAAAA,EAAUV,MAEzB,iBAAKL,UAAWQ,EAAAA,YAAhB,WAEI,mBAAQR,UAAWQ,EAAAA,WAAnB,oBAEA,SAACE,EAAA,EAAD,CACIV,UAAWQ,EAAAA,WACXJ,KAAK,WACLQ,KAAM,aACNC,UAAWV,EAAAA,YCTzBa,GAAiBC,EAAAA,EAAAA,GAA8B,CAAEC,KAAM,SAAtCD,CAAiDE,GAExE,EArBc,WACV,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OANeC,EAAAA,EAAAA,KAAa,SAACC,GAAD,OAAwBA,EAAMC,KAAKC,WAM5C,SAAC,KAAD,CAAUC,GAAG,cAE5B,iBAAK1B,UAAWQ,EAAAA,UAAhB,WACI,eAAIR,UAAWQ,EAAAA,WAAf,oDAGA,SAACQ,EAAD,CAAgBP,SAVH,SAACkB,GAClBP,GAASQ,EAAAA,EAAAA,IAAMD,EAASE,MAAOF,EAASG,SAAUH,EAASI,qB,4ECpB5D,IAAMhB,EAAW,SAACiB,GACrB,IAAIA,EACJ,MAAO,qBAGE1B,EAA4B,SAAC2B,GACtC,OAAO,SAACD,GACJ,GAAIA,EAAME,OAASD,EACf,MAAM,iBAAN,OAAwBA,EAAxB","sources":["webpack://my-app-u/./src/components/common/formsControls/formsConstrols.module.css?d382","components/common/formsControls/formsConstrols.js","webpack://my-app-u/./src/components/login/Login.module.css?3966","components/login/LoginForm.tsx","components/login/Login.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"formsConstrols_formControl__zzqGo\",\"error\":\"formsConstrols_error__aoWSK\",\"CheckBox\":\"formsConstrols_CheckBox__gXUjF\",\"rememberMe\":\"formsConstrols_rememberMe__8rnmp\",\"squere\":\"formsConstrols_squere__BrXPc\",\"formSummaryError\":\"formsConstrols_formSummaryError__DSSCy\",\"spanWrapper\":\"formsConstrols_spanWrapper__2K-W2\"};","import styles from \"./formsConstrols.module.css\"\r\nimport React from \"react\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    return (\r\n        <span className={styles.spanWrapper}>\r\n            <textarea {...input}{...props}/>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return <span className={styles.spanWrapper}>\r\n            <input  {...input}{...props}/>\r\n        </span>\r\n        \r\n    \r\n}\r\n\r\nexport const CheckBox = ({input}) => {\r\n    return (\r\n        <div className={styles.CheckBox} >\r\n            <input className={styles.squere}  type=\"checkBox\" {...input}/> <span className={styles.rememberMe}>remember</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n  \r\n","// extracted by mini-css-extract-plugin\nexport default {\"mainBlock\":\"Login_mainBlock__QLKWk\",\"email\":\"Login_email__1IqGQ\",\"password\":\"Login_password__5fu7y\",\"loginTitle\":\"Login_loginTitle__yoIW6\",\"mainButton\":\"Login_mainButton__XbpV2\",\"form\":\"Login_form__K5gnD\",\"bottomBlock\":\"Login_bottomBlock__IcfXm\"};","import React from \"react\"\r\nimport { Field, InjectedFormProps } from \"redux-form\"\r\nimport { maxLengthValidatorCreator, required } from \"../../utils/validators/validators\"\r\nimport { CheckBox, Input } from \"../common/formsControls/formsConstrols\"\r\nimport classes from './Login.module.css'\r\n\r\n\r\ntype formDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nlet maxLength30 = maxLengthValidatorCreator(30)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<formDataType, void>> = ({ handleSubmit }) => {\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n\r\n            <Field\r\n                className={classes.email}\r\n                placeholder=\"Email\"\r\n                name={\"email\"}\r\n                component={Input}\r\n                validate={[required]} />\r\n\r\n            <Field\r\n                className={classes.password}\r\n                placeholder=\"Password\"\r\n                name={\"password\"}\r\n                type={\"password\"}\r\n                component={Input}\r\n                validate={[required, maxLength30]} />\r\n\r\n            <div className={classes.bottomBlock}>\r\n\r\n                <button className={classes.mainButton}>Login</button>\r\n\r\n                <Field\r\n                    className={classes.rememberMe}\r\n                    type=\"checkbox\"\r\n                    name={\"rememberMe\"}\r\n                    component={CheckBox} />\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { reduxForm } from \"redux-form\"\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { AppStateType } from \"../../redux/redux-store\"\r\nimport classes from './Login.module.css'\r\nimport LoginForm from \"./LoginForm\"\r\n\r\n\r\ntype formDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch() \r\n    const isAuth = useSelector( (state:AppStateType) => state.auth.isAuth )\r\n\r\n    const onSubmitFunc = (formData: formDataType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe))\r\n    }\r\n\r\n    if (isAuth) return <Navigate to='/profile' />\r\n    return (\r\n        <div className={classes.mainBlock}>\r\n            <h1 className={classes.loginTitle}>\r\n                Login to access the social network :)\r\n            </h1>\r\n            <LoginReduxForm onSubmit={onSubmitFunc} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<formDataType, void>({ form: 'login' })(LoginForm)\r\n\r\nexport default Login","export const required = (value:boolean) => {\r\n    if (value) return undefined;\r\n    return 'Field is reguired';  \r\n}\r\n\r\nexport const maxLengthValidatorCreator = (maxLength: number) => {\r\n    return (value: string) => {\r\n        if (value.length > maxLength) {\r\n            return `Max length is ${maxLength} symbols`\r\n        }\r\n        return undefined\r\n    }\r\n}\r\n"],"names":["Textarea","input","props","meta","className","styles","Input","CheckBox","type","maxLength30","maxLengthValidatorCreator","handleSubmit","classes","onSubmit","Field","placeholder","name","component","validate","required","LoginReduxForm","reduxForm","form","LoginForm","dispatch","useDispatch","useSelector","state","auth","isAuth","to","formData","login","email","password","rememberMe","value","maxLength","length"],"sourceRoot":""}