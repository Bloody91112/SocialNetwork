{"version":3,"file":"static/js/953.59cf159f.chunk.js","mappings":"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","sources":["webpack://my-app-u/./src/components/users/Users.module.css?d05c","webpack://my-app-u/./src/components/common/Pagination/Pagination.module.css?82a8","components/common/Pagination/Pagination.tsx","components/users/UsersSearchForm.tsx","redux/users-selectors.ts","components/users/Users.tsx","components/users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Users_avatar__J2P9m\",\"selectedPage\":\"Users_selectedPage__jTgQW\",\"form\":\"Users_form__F9iFS\",\"search\":\"Users_search__cjEGX\",\"input\":\"Users_input__MPoNa\",\"option\":\"Users_option__4hui4\",\"select\":\"Users_select__ULs+0\",\"inputButton\":\"Users_inputButton__0kcE7\",\"title\":\"Users_title__C25WS\",\"allUsers\":\"Users_allUsers__GXxHa\",\"user\":\"Users_user__fdNpy\",\"userName\":\"Users_userName__HtC1K\",\"userStatus\":\"Users_userStatus__e5Pkr\",\"button\":\"Users_button__UxpfY\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Pagination_selectedPage__AX7rE\",\"page\":\"Pagination_page__o4kjR\",\"pageNumbers\":\"Pagination_pageNumbers__swEg-\",\"button\":\"Pagination_button__HAUMw\",\"paginator\":\"Pagination_paginator__ayrU5\",\"paginatorBlock\":\"Pagination_paginatorBlock__pNx6v\"};","import classes from './Pagination.module.css'\r\nimport React, { useState } from 'react'\r\n\r\n\r\ntype propsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage: number\r\n}\r\n\r\ntype pageType = {\r\n    id: number\r\n    itemGroup: number\r\n}\r\n\r\n\r\n\r\nconst Pagination: React.FC<propsType> = ({ totalUsersCount, pageSize, onPageChanged, currentPage }) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages: Array<pageType> = [];\r\n    let [group, changeGroup] = useState(1)\r\n    let TotalCounter = 1\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        if (i % 5 === 0) TotalCounter += 1\r\n        pages.push({ id: i, itemGroup: TotalCounter });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.paginatorBlock}>\r\n            <div className={classes.paginator}>\r\n                <button className={classes.button} onClick={() => { changeGroup(group = 1) }}>&laquo;</button>\r\n                <button className={classes.button} onClick={() => { if (group > 1) changeGroup(group - 1) }}>&lt;</button>\r\n                <span className={classes.pageNumbers}>\r\n                    {pages.filter(page => page.itemGroup === group).map(page =>\r\n                        <span key={page.id}\r\n                            onClick={() => { onPageChanged(page.id) }}\r\n                            className={currentPage === page.id ? classes.selectedPage : classes.page}>\r\n                            {page.id}\r\n                        </span>)}\r\n                </span>\r\n                <button className={classes.button} onClick={() => { if (group < TotalCounter) changeGroup(group + 1) }}>&gt;</button>\r\n                <button className={classes.button} onClick={() => { changeGroup(group = TotalCounter) }}>&raquo;</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Pagination","import { Field, Form, Formik } from 'formik';\r\nimport { filterType } from '../../redux/users-reducer';\r\nimport classes from './Users.module.css'\r\n\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors:any = {};\r\n    return errors;\r\n}\r\n\r\ntype propsType = {\r\n    onFilterChanged: (filter: filterType) => void\r\n}\r\n\r\n\r\nconst UsersSearchForm: React.FC<propsType> = ({onFilterChanged}) => {\r\n\r\n    const submit = (values: filterType, { setSubmitting }: any) => {\r\n        onFilterChanged(values)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        \r\n            <Formik\r\n                initialValues={{ term:'' ,friend: null }}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form className={classes.form}>\r\n                    <div className={classes.search}>\r\n                        <Field placeholder=\"Enter user name\" className={classes.input} name='term' type=\"text\"></Field>\r\n                        <Field className={classes.select} name=\"friend\" as=\"select\">\r\n                            <option className={classes.option} value=\"null\" >All</option>\r\n                            <option className={classes.option} value=\"false\">Unfollowed</option>\r\n                            <option className={classes.option} value=\"true\">Followed</option>\r\n                        </Field>\r\n                    </div>\r\n                        <button className={classes.inputButton} type=\"submit\" disabled={isSubmitting}>\r\n                            Find\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default UsersSearchForm","import { AppStateType } from './redux-store';\r\nimport { createSelector } from 'reselect'\r\n\r\nexport const getUsers = (state:AppStateType) => {\r\n    return  state.users.users\r\n}\r\n\r\nexport const getUsersSelector = createSelector( getUsers,\r\n    (users) => {\r\n    return users\r\n})\r\n\r\nexport const getPageSize = (state:AppStateType) => {\r\n    return  state.users.pageSize\r\n}\r\n\r\n\r\nexport const getTotalUsersCount = (state:AppStateType) => {\r\n    return  state.users.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state:AppStateType) => {\r\n    return  state.users.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state:AppStateType) => {\r\n    return  state.users.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state:AppStateType) => {\r\n    return  state.users.followingInProgress\r\n}\r\nexport const getUsersFilter = (state:AppStateType) => {\r\n    return  state.users.filter\r\n}\r\n\r\n\r\n\r\n","\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../assets/images/cat.jpg'\r\nimport  { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Pagination from '../common/Pagination/Pagination';\r\nimport UsersSearchForm from './UsersSearchForm';\r\nimport { filterType, requestUsers, follow, unfollow } from '../../redux/users-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentPage, getFollowingInProgress, getPageSize, getTotalUsersCount, getUsers, getUsersFilter } from '../../redux/users-selectors';\r\n\r\n\r\nlet Users = () => {\r\n\r\n        const totalUsersCount = useSelector(getTotalUsersCount)\r\n        const users = useSelector(getUsers)\r\n        const currentPage = useSelector(getCurrentPage)\r\n        const pageSize = useSelector(getPageSize)\r\n        const followingInProgress = useSelector(getFollowingInProgress)\r\n        const filter = useSelector(getUsersFilter)\r\n        \r\n        const dispatch = useDispatch();\r\n\r\n        useEffect( () => {\r\n            dispatch(requestUsers(currentPage, pageSize, filter))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        },[])\r\n\r\n        const onFilterChanged = (filter: filterType) => {\r\n            dispatch(requestUsers(1, pageSize, filter))\r\n        }\r\n        const onPageChanged = (currentPage: number) => {\r\n            dispatch(requestUsers(currentPage, pageSize, filter))\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.allUsers}>\r\n                <h1 className={classes.title}>All users</h1>\r\n                <UsersSearchForm onFilterChanged={onFilterChanged} />\r\n                {\r\n                    users.map(user => <div className={classes.user} key={user.id}>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ?\r\n                                user.photos.small :\r\n                                userPhoto}\r\n                                className={classes.avatar} alt=\"\" />\r\n                        </NavLink>\r\n                        <div className={classes.userDescription}>\r\n                            <div className={classes.userName}>{user.name}</div>\r\n                            <div className={classes.userStatus}>{user.status}</div>\r\n                            <div>{user.followed\r\n                                ? <button className={classes.button}\r\n                                    disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={() => { dispatch(unfollow(user.id)) }}>\r\n                                    UNFOLLOW\r\n                                </button>\r\n                                : <button className={classes.button}\r\n                                    disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={() => { dispatch(follow(user.id)) }}>\r\n                                    FOLLOW\r\n                                </button>\r\n                            }</div>\r\n                        </div>\r\n\r\n                    </div>)\r\n                }\r\n                <Pagination currentPage={currentPage}\r\n                    pageSize={pageSize}\r\n                    totalUsersCount={totalUsersCount}\r\n                    onPageChanged={onPageChanged} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default Users","import { useSelector } from \"react-redux\";\r\nimport Users from './Users'\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport { getIsFetching } from \"../../redux/users-selectors\";\r\n\r\n\r\nconst UsersPage = () => {\r\n    const isFetching = useSelector(getIsFetching)\r\n    return <>\r\n        {isFetching ? <Preloader /> : null}\r\n        <Users />\r\n    </>\r\n}\r\n\r\nexport default UsersPage"],"names":["totalUsersCount","pageSize","onPageChanged","currentPage","pagesCount","Math","ceil","pages","useState","group","changeGroup","TotalCounter","i","push","id","itemGroup","className","classes","onClick","filter","page","map","usersSearchFormValidate","values","onFilterChanged","initialValues","term","friend","validate","onSubmit","setSubmitting","isSubmitting","placeholder","name","type","as","value","disabled","getUsers","state","users","getPageSize","createSelector","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter","useSelector","dispatch","useDispatch","useEffect","requestUsers","user","to","src","photos","small","userPhoto","alt","status","followed","some","unfollow","follow","Preloader"],"sourceRoot":""}